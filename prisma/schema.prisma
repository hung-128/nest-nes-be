generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  action     String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  users      User[]

  @@map("roles")
}

model User {
  id                Int            @id @default(autoincrement())
  name              String         @db.VarChar(255)
  email             String         @unique(map: "users_email_unique") @db.VarChar(255)
  password          String?        @db.VarChar(255)
  email_verified_at DateTime?      @db.Timestamp(0)
  role_id           Int
  type              Int
  role              Role?          @relation(fields: [role_id], references: [id])
  created_at        DateTime?      @db.Timestamp(0)
  updated_at        DateTime?      @updatedAt @db.Timestamp(0)
  wishlists         Wishlist[]
  wishlist_items    WishlistItem[]

  @@map("users")
}

model Wishlist {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  decription String    @db.VarChar(255)
  user_id    Int
  user       User      @relation(fields: [user_id], references: [id])
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  Image      Image[]

  @@map("wishlists")
}

model WishlistItem {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  url        String?
  user_id    Int
  user       User      @relation(fields: [user_id], references: [id])
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  Image      Image[]

  @@map("wishlist_items")
}

model Image {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  location     String?
  image_type   ImageType
  imageable_id Int
  Wishlist     Wishlist?     @relation(fields: [imageable_id], references: [id], map: "wishlist_imageableId")
  WishlistItem WishlistItem? @relation(fields: [imageable_id], references: [id], map: "wishlistItem_imageableId")
  created_at   DateTime?     @db.Timestamp(0)
  updated_at   DateTime?     @updatedAt @db.Timestamp(0)

  @@map("images")
}

model Question {
  id         Int       @id @default(autoincrement())
  subject    String    @db.VarChar(255)
  question   String
  img        String
  answer     Answer?
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)

  @@map("questions")
}

model Answer {
  id          Int       @id @default(autoincrement())
  question_id Int       @unique
  question    Question  @relation(fields: [question_id], references: [id])
  subject     String    @db.VarChar(255)
  answer      String
  img         String
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @updatedAt @db.Timestamp(0)

  @@map("answers")
}

enum ImageType {
  WishlistItem
  WishList
}
